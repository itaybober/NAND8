@256
D=A
@SP
M=D
@Sys.init
0;JMP
// function Class1.set 0
(Class1.set)
@0
D=A
@SP
M=M+D
A=M-D
// C_PUSH argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_POP static 0
@16
D=A
@TAR1
M=D
@0
D=A
@TAR1
M=D+M
@SP
M=M-1
A=M
D=M
@TAR1
A=M
M=D
// C_PUSH argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_POP static 1
@16
D=A
@TAR2
M=D
@1
D=A
@TAR2
M=D+M
@SP
M=M-1
A=M
D=M
@TAR2
A=M
M=D
// C_PUSH constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// write return Class1.set
@LCL
D=M
@FRAME3
M=D
@5
D=A
@FRAME3
D=M-D
A=D
D=M
@RETADDR3
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
D=A+1
@SP
M=D
@FRAME3
A=M
A=A-1
D=M
@THAT
M=D
@FRAME3
A=M
A=A-1
A=A-1
D=M
@THIS
M=D
@FRAME3
A=M
A=A-1
A=A-1
A=A-1
D=M
@ARG
M=D
@FRAME3
A=M
A=A-1
A=A-1
A=A-1
A=A-1
D=M
@LCL
M=D
@RETADDR3
A=M
0;JMP
// function Class1.get 0
(Class1.get)
@0
D=A
@SP
M=M+D
A=M-D
// C_PUSH static 0
@0
D=A
@16
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH static 1
@1
D=A
@16
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=D
// write return Class1.get
@LCL
D=M
@FRAME4
M=D
@5
D=A
@FRAME4
D=M-D
A=D
D=M
@RETADDR4
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
D=A+1
@SP
M=D
@FRAME4
A=M
A=A-1
D=M
@THAT
M=D
@FRAME4
A=M
A=A-1
A=A-1
D=M
@THIS
M=D
@FRAME4
A=M
A=A-1
A=A-1
A=A-1
D=M
@ARG
M=D
@FRAME4
A=M
A=A-1
A=A-1
A=A-1
A=A-1
D=M
@LCL
M=D
@RETADDR4
A=M
0;JMP
// function Class2.set 0
(Class2.set)
@0
D=A
@SP
M=M+D
A=M-D
// C_PUSH argument 0
@0
D=A
@ARG
A=M
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_POP static 0
@16
D=A
@TAR1
M=D
@0
D=A
@TAR1
M=D+M
@SP
M=M-1
A=M
D=M
@TAR1
A=M
M=D
// C_PUSH argument 1
@1
D=A
@ARG
A=M
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_POP static 1
@16
D=A
@TAR2
M=D
@1
D=A
@TAR2
M=D+M
@SP
M=M-1
A=M
D=M
@TAR2
A=M
M=D
// C_PUSH constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// write return Class2.set
@LCL
D=M
@FRAME3
M=D
@5
D=A
@FRAME3
D=M-D
A=D
D=M
@RETADDR3
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
D=A+1
@SP
M=D
@FRAME3
A=M
A=A-1
D=M
@THAT
M=D
@FRAME3
A=M
A=A-1
A=A-1
D=M
@THIS
M=D
@FRAME3
A=M
A=A-1
A=A-1
A=A-1
D=M
@ARG
M=D
@FRAME3
A=M
A=A-1
A=A-1
A=A-1
A=A-1
D=M
@LCL
M=D
@RETADDR3
A=M
0;JMP
// function Class2.get 0
(Class2.get)
@0
D=A
@SP
M=M+D
A=M-D
// C_PUSH static 0
@0
D=A
@16
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH static 1
@1
D=A
@16
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
// sub
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
M=D
// write return Class2.get
@LCL
D=M
@FRAME4
M=D
@5
D=A
@FRAME4
D=M-D
A=D
D=M
@RETADDR4
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
D=A+1
@SP
M=D
@FRAME4
A=M
A=A-1
D=M
@THAT
M=D
@FRAME4
A=M
A=A-1
A=A-1
D=M
@THIS
M=D
@FRAME4
A=M
A=A-1
A=A-1
A=A-1
D=M
@ARG
M=D
@FRAME4
A=M
A=A-1
A=A-1
A=A-1
A=A-1
D=M
@LCL
M=D
@RETADDR4
A=M
0;JMP
// function Sys.init 0
(Sys.init)
@0
D=A
@SP
M=M+D
A=M-D
// C_PUSH constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
// Call Class1.set 2
@RETURN1Class1.set
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@LCL
M=D
@ARG
M=D
M=M-1
M=M-1
M=M-1
M=M-1
M=M-1
M=M-1
M=M-1
@Class1.set
0;JMP
(RETURN1Class1.set)
// C_POP temp 0
@5
D=A
@TAR2
M=D
@0
D=A
@TAR2
M=D+M
@SP
M=M-1
A=M
D=M
@TAR2
A=M
M=D
// C_PUSH constant 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
// C_PUSH constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
// Call Class2.set 2
@RETURN3Class2.set
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@LCL
M=D
@ARG
M=D
M=M-1
M=M-1
M=M-1
M=M-1
M=M-1
M=M-1
M=M-1
@Class2.set
0;JMP
(RETURN3Class2.set)
// C_POP temp 0
@5
D=A
@TAR4
M=D
@0
D=A
@TAR4
M=D+M
@SP
M=M-1
A=M
D=M
@TAR4
A=M
M=D
// Call Class1.get 0
@RETURN5Class1.get
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@LCL
M=D
@ARG
M=D
M=M-1
M=M-1
M=M-1
M=M-1
M=M-1
@Class1.get
0;JMP
(RETURN5Class1.get)
// Call Class2.get 0
@RETURN6Class2.get
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@LCL
M=D
@ARG
M=D
M=M-1
M=M-1
M=M-1
M=M-1
M=M-1
@Class2.get
0;JMP
(RETURN6Class2.get)
// write label
(Sys.init$WHILE)
// write goto
@Sys.init$WHILE
0;JMP
